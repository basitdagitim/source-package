#!/bin/bash

moduller()
{
for directory in ${@};
    	do
    	data=$(/sbin/modprobe --show-depends ${directory}|cut -d'/' -f8)
    	datas=$(echo $data | tr " " "\n")
    	bs=0
	    	for item in ${datas[@]}
	    	do
	    	
	    	##echo $item
	find /lib/modules/$(uname -r)/kernel/ -type f  -name "${item}"\
        -exec install {} $HOME/distro/initrd/lib/modules/$(uname -r)/moduller/ \;

	    	done
	    	
	    	
	done
}

rm -rf $HOME/distro/iso
rm -rf $HOME/distro/initrd
bash ./initrd
#*****************glibc hazırlanmalı************************
cd $HOME/distro/build-glibc-2.38
make install DESTDIR=$HOME/distro/initrd
cd $HOME/distro/initrd/
ln -s lib lib64

#***************************readline**********************
cd $HOME/distro/build-readline-8.1
make install DESTDIR=$HOME/distro/initrd

#***************************ncurses**********************
cd $HOME/distro/build-ncurses-6.4
make install DESTDIR=$HOME/distro/initrd
cd $HOME/distro/initrd/lib
ln -s libncursesw.so.6 libtinfow.so.6
ln -s libncursesw.so.6 libtinfo.so.6
ln -s libncursesw.so.6 libncurses.so.6
#***************************bash**********************
cd $HOME/distro/build-bash-5.2.21
make install DESTDIR=$HOME/distro/initrd

#*****************busybox hazırlanmalı************************
cd $HOME/distro/busybox-1.36.1
cp ./busybox $HOME/distro/initrd/bin/busybox #sistemden kopyalandı..

#*****************kmod hazırlanacak***************************
cd $HOME/distro/build-kmod-31
make install DESTDIR=$HOME/distro/initrd

cd $HOME/distro/initrd/sbin
ln -s kmod depmod
ln -s kmod insmod
ln -s kmod lsmod
ln -s kmod modinfo
ln -s kmod modprobe
ln -s kmod rmmod

#****************modul yukleme*************************
#cd $HOME/distro/linux-6.6.2
#make bzImage modules
#INSTALL_MOD_PATH="$HOME/distro/initrd" make modules_install
#/sbin/depmod --all --basedir=initrd #modul indeksi oluşturluyor
mkdir -p $HOME/distro/initrd/lib/modules/
mkdir -p $HOME/distro/initrd/lib/modules/$(uname -r)
mkdir -p $HOME/distro/initrd/lib/modules/$(uname -r)/moduller
#moduller {cdrom,loop,md,ahci,block,ata,firewire,sd,scsi,message,pcmcia,virtio,host}
#moduller {storage,crypto,fs,lib,dm-snapshot,overlay,isofs,squashfs,hfsplus,sr_mod,dm_mod}
#moduller {nls,nls_utf8,overlayfs,udf,ext4,usb-storage}

#for directory in {lib,fs,crypto,net} \
#   drivers/{usb,block,ata,md,firewire} \
#    drivers/{scsi,message,pcmcia,virtio} ;
#   	do
    	#echo ${directory}
    	#    misc \
#  find /lib/modules/$(uname -r)/kernel/${directory}/ -type f \
#      -exec install {} $HOME/distro/initrd/lib/modules/$(uname -r)/moduller/ \;
#	done
cp /lib/modules/$(uname -r)/kernel/* -rf $HOME/distro/initrd/lib/modules/$(uname -r)/moduller/ #sistemden kopyalandı..

/sbin/depmod --all --basedir=$HOME/distro/initrd #modul indeksi oluşturluyor
#*****************kurallar yüklenecek*************************
mkdir -p $HOME/distro/initrd/etc/udev/
mkdir -p $HOME/distro/initrd/lib/udev/
cp /etc/udev/rules.d -rf  $HOME/distro/initrd/etc/udev/
cp /lib/udev/rules.d -rf  $HOME/distro/initrd/lib/udev/
#rm -rf $HOME/distro/initrd/lib/udev/rules.d/80-drivers.rules
#rm -rf $HOME/distro/initrd/lib/udev/rules.d/80-debian-compat.rules
#rm -rf $HOME/distro/initrd/lib/udev/rules.d/80-net-setup-link.rules
#rm -rf $HOME/distro/initrd/lib/udev/rules.d/90-nm-thunderbolt.rules
#rm -rf $HOME/distro/initrd/lib/udev/rules.d/73-seat-late.rules
#***************************udevd-udevadm**********************
cd $HOME/distro/build-eudev-3.2.14
make install DESTDIR=$HOME/distro/initrd

#***************************util-linux**********************
cd $HOME/distro/build-util-linux-2.39
make install DESTDIR=$HOME/distro/initrd
cp .libs/* -rf $HOME/distro/initrd/lib/
cp $HOME/distro/initrd/lib/cfdisk $HOME/distro/initrd/bin/
#***************************nano**********************
cd $HOME/distro/build-nano-7.2
make install DESTDIR=$HOME/distro/initrd
cd $HOME/distro/initrd
cp $HOME/distro/initrd/bin/nano $HOME/distro/initrd/sbin/nano 
echo "INPUT(-lncursesw)" > $LFS/lib/libncurses.so
#******************libarchive**********************
cd $HOME/distro/build-libarchive-3.7.2
make install DESTDIR=$HOME/distro/initrd

#******************libcapng**********************
cd $HOME/distro/build-libcap-ng-0.8.3
make install DESTDIR=$HOME/distro/initrd

#*************************base-file kopyalanıyor*************************
cp $HOME/distro/base-files-0/* -rf $HOME/distro/initrd

#*************************curl kopyalanıyor*************************
cd $HOME/distro/build-curl-8.4.0
make install DESTDIR=$HOME/distro/initrd
 for ver in 3 4.0.0 4.1.0 4.2.0 4.3.0 4.4.0 4.5.0 4.6.0 4.7.0; do
        ln -s $HOME/distro/initrd/lib/libcurl.so.4.8.0 $HOME/distro/initrd/lib/libcurl.so.${ver}
    done
    
#*************************openssl kopyalanıyor*************************
cd $HOME/distro/build-openssl-3.2.0
make install DESTDIR=$HOME/distro/initrd

cd $HOME/distro/initrd/etc/ssl && {
    wget -O cacert.pem https://curl.haxx.se/ca/cacert.pem
    mv -f cacert.pem cert.pem
    printf '%s\n' "${0##*/}: updated cert.pem"
}
#*************************libzstd kopyalanıyor*************************
cd $HOME/distro/zstd-1.5.5-kernel
make install DESTDIR=$HOME/distro/initrd
cp $HOME/distro/initrd/usr/local/* -rf $HOME/distro/initrd/

#*************************zlib kopyalanıyor*************************
cd $HOME/distro/build-zlib-1.3
make install DESTDIR=$HOME/distro/initrd
#*************************liblzma-xz kopyalanıyor*************************
cd $HOME/distro/build-xz-5.4.5
make install DESTDIR=$HOME/distro/initrd

#*************************liblzma-xz kopyalanıyor*************************
cd $HOME/distro/bzip2-1.0.8
make install DESTDIR=$HOME/distro/initrd
cp -v bzip2-shared $HOME/distro/initrd/bin/bzip2
cp -av libbz2.so* $HOME/distro/initrd/lib
ln -sv $HOME/distro/initrd/lib/libbz2.so.1.0 $HOME/distro/initrd/usr/lib/libbz2.so
rm -v $HOME/rootfs/initrd/bin/{bunzip2,bzcat,bzip2}
ln -sv $HOME/distro/initrd/bzip2 $HOME/rootfs/initrd/bin/bunzip2
ln -sv $HOME/distro/initrd/bzip2 $HOME/rootfs/initrd/bin/bzcat
#*************************libexpat kopyalanıyor*************************
cd $HOME/distro/build-expat-2.5.0
make install DESTDIR=$HOME/distro/initrd

#*************************libxml2 kopyalanıyor*************************
cd $HOME/distro/build-libxml2-2.12.1
make install DESTDIR=$HOME/distro/initrd

#*************************grub kopyalanıyor*************************
cd $HOME/distro/build-grub-2.06
make install DESTDIR=$HOME/distro/initrd

#*************************rsync kopyalanıyor*************************
cd $HOME/distro/build-rsync-3.2.7
make install DESTDIR=$HOME/distro/initrd

#*************************e2fsprogs kopyalanıyor*************************
cd $HOME/distro/build-e2fsprogs-1.47.0
make install DESTDIR=$HOME/distro/initrd

#*************************dialog kopyalanıyor*************************
cd $HOME/distro/build-dialog-1.3-20230209
make install DESTDIR=$HOME/distro/initrd

#*************************live-boot*************************
#cd $HOME/distro/live-boot
#make install DESTDIR=$HOME/distro/initrd

#********************udhcpc**************************
mkdir -p $HOME/distro/initrd/usr
mkdir -p $HOME/distro/initrd/usr/share
mkdir -p $HOME/distro/initrd/usr/share/udhcpc


#**************************init dosyası oluşturuluyor***********************************

#cat >  $HOME/distro/initrd/init << EOF


#EOF



chmod +x $HOME/distro/initrd/init 
cd $HOME/distro/initrd
#find |cpio -H newc -o >../initrd.img



#************************iso *********************************
mkdir -p $HOME/distro/iso
mkdir -p $HOME/distro/iso/boot
mkdir -p $HOME/distro/iso/boot/grub
mkdir -p $HOME/distro/iso/live || true


#squashfs dosyası oluşturuluyor iso dzinine kopyalanıyor
#cp -prfv $HOME/distro/iso/boot /$HOME/distro/initrd/
cd $HOME/distro/
mksquashfs initrd $HOME/distro/filesystem.squashfs -comp xz -wildcards
mv $HOME/distro/filesystem.squashfs $HOME/distro/iso/live/filesystem.squashfs

#iso dizinine vmlinuz ve initrd.img dosyamız kopyalanıyor
#cp /boot/vmlinuz-$(uname -r) $HOME/distro/iso/boot/vmlinuz  #sistemde kullandığım kerneli kopyaladım istenirde kernel derlenebilir.
#mv $HOME/distro/initrd.img $HOME/distro/iso/boot/initrd.img #oluşturduğumuz **initrd.img** dosyamızı taşıyoruz.


#grub menüsü oluşturuluyor..
#cat > $HOME/distro/iso/boot/grub/grub.cfg << EOF
#linux /boot/vmlinuz net.ifnames=0 biosdevname=0
#initrd /boot/initrd.img
#boot boot=live
#EOF




#echo 'menuentry "Live GNU/Linux 64-bit" --class live {' > $HOME/distro/iso/boot/grub/grub.cfg
#echo '    linux /boot/vmlinuz boot=live quiet live-config --' >> liveiso/boot/grub/grub.cfg
#echo '    initrd /boot/initrd.img' >> $HOME/distro/iso/boot/grub/grub.cfg
#echo '}' >> $HOME/distro/iso/boot/grub/grub.cfg

grub-mkrescue $HOME/distro/iso/ -o $HOME/distro/distro.iso
#qemu-system-x86_64 -cdrom $HOME/distro/distro.iso -m 1G





